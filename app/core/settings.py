from pydantic_settings import BaseSettings, SettingsConfigDict


class Settings(BaseSettings):
    model_config = SettingsConfigDict(
        env_file=".env",
        env_file_encoding="utf-8",
        extra="ignore",
        case_sensitive=True,
        env_ignore_empty=True,
    )

    # APPLICATION
    APPLICATION_TITLE: str
    APPLICATION_SUMMARY: str
    APPLICATION_DESCRIPTION: str = """
## Overview

This project is a minimal FastAPI example that demonstrates **API Key authentication** using a single, fixed key loaded from a `.env` file. There is **no key administration** (no rotation, revocation, or multi‑key store) — the goal is to show a clean, reproducible pattern suitable for learning and for small internal tools.

## Authentication

- **Scheme name (OpenAPI):** `ApiKeyAuth`
- **Transport:** API key in HTTP header  
- **Header name:** `X-API-Key`  
- **Header description:** “API key to access the application. This key is used to authenticate requests to the API.”
- **Validation:** Requests must include a header whose value matches the configured default key.
- **Default key (sample):** `a8c46a27-712d-4091-84c3-3f843bad9826`

Example:
```
X-API-Key: a8c46a27-712d-4091-84c3-3f843bad9826
````

## Endpoint

### `POST /api/v1/example`

**Request body (JSON):**
```json
{
  "name": "Alice"
}
````

**Success response (200):**

```
Hello Alice!
```

This endpoint simply greets the provided `name`. It exists to illustrate the authentication flow with a concrete, end‑to‑end request.

## Quick start

1. Create a `.env` file (see **Configuration**).
2. Run the app: `uvicorn app.main:app --reload`
3. Call the endpoint with a valid API key:

```bash
curl -X POST http://localhost:8000/api/v1/example \
  -H "Content-Type: application/json" \
  -H "X-API-Key: a8c46a27-712d-4091-84c3-3f843bad9826" \
  -d '{"name":"Alice"}'
```

**Expected output:**

```
Hello Alice!
```

## Configuration

All security settings are read from environment variables (e.g., via `.env`):

```env
SECURITY_API_KEY_HEADER="X-API-Key"
SECURITY_API_KEY_HEADER_DESCRIPTION="API key to access the application. This key is used to authenticate requests to the API."
SECURITY_SCHEME_NAME="ApiKeyAuth"
SECURITY_DEFAULT_API_KEY="a8c46a27-712d-4091-84c3-3f843bad9826"
```

> **Note:** The default key above is provided for demonstration. For any real usage, replace it with a secret value and keep your `.env` outside version control.

## OpenAPI UI

Once running, you can explore and try the endpoint from the autogenerated docs at `/docs` (Swagger UI) or `/redoc`.
    """
    APPLICATION_VERSION: str
    APPLICATION_CONTACT_NAME: str
    APPLICATION_CONTACT_URL: str
    APPLICATION_CONTACT_EMAIL: str
    APPLICATION_CONTACT_PHONE: str

    # ENVIRONMENT
    ENVIRONMENT: str
    ENVIRONMENT_DEBUG: bool = False

    # SECURITY
    SECURITY_API_KEY_HEADER: str
    SECURITY_API_KEY_HEADER_DESCRIPTION: str
    SECURITY_SCHEME_NAME: str
    SECURITY_DEFAULT_API_KEY: str

    # LOGS
    LOGS_NAME: str
    LOGS_PATH: str
    LOGS_LEVEL: str
    LOGS_REQUEST_ID_LENGTH: int
    LOGS_PYGMENTS_STYLE: str = "monokai"

    def __init__(self, **kwargs):
        super().__init__(**kwargs)

        for field_name, field_info in self.model_fields.items():
            value = getattr(self, field_name)
            if isinstance(value, str) and len(value) >= 2:
                if (value.startswith('"') and value.endswith('"')) or (
                    value.startswith("'") and value.endswith("'")
                ):
                    setattr(self, field_name, value[1:-1])

        if self.ENVIRONMENT not in ["DEV", "HOMOLOG", "MAIN"]:
            raise ValueError(
                f"Invalid execution environment: {self.ENVIRONMENT}. The environment must be DEV, HOMOLOG, or MAIN (case-sensitive)."
                f"Please check your .env file."
            )

        if self.ENVIRONMENT == "DEV":
            self.ENVIRONMENT_DEBUG = True
        else:
            self.ENVIRONMENT_DEBUG = False


settings = Settings()
